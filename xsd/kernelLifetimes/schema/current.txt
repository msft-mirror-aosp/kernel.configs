// Signature format: 2.0
package kernel.lifetimes {

  public class Branch {
    ctor public Branch();
    method public javax.xml.datatype.XMLGregorianCalendar getEol();
    method public javax.xml.datatype.XMLGregorianCalendar getLaunch();
    method public String getName();
    method public java.util.List<kernel.lifetimes.Release> getRelease();
    method public String getVersion();
    method public void setEol(javax.xml.datatype.XMLGregorianCalendar);
    method public void setLaunch(javax.xml.datatype.XMLGregorianCalendar);
    method public void setName(String);
    method public void setVersion(String);
  }

  public class Kernels {
    ctor public Kernels();
    method public java.util.List<kernel.lifetimes.Branch> getBranch();
    method public int getSchema_version();
    method public void setSchema_version(int);
  }

  public class Release {
    ctor public Release();
    method public javax.xml.datatype.XMLGregorianCalendar getEol();
    method public javax.xml.datatype.XMLGregorianCalendar getLaunch();
    method public String getVersion();
    method public void setEol(javax.xml.datatype.XMLGregorianCalendar);
    method public void setLaunch(javax.xml.datatype.XMLGregorianCalendar);
    method public void setVersion(String);
  }

  public class XmlParser {
    ctor public XmlParser();
    method public static kernel.lifetimes.Kernels read(java.io.InputStream) throws javax.xml.datatype.DatatypeConfigurationException, java.io.IOException, org.xmlpull.v1.XmlPullParserException;
    method public static String readText(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException;
    method public static void skip(org.xmlpull.v1.XmlPullParser) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException;
  }

}

